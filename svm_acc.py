# -*- coding: utf-8 -*-
"""SVM_ACC.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nFCyH0cqUH39NSDaeCVn9D815FDGfmYB
"""

from google.colab import files
files.upload()  # Upload kaggle.json here

!pip install -q kaggle

!mkdir -p ~/.kaggle
!mv kaggle.json ~/.kaggle/
!chmod 600 ~/.kaggle/kaggle.json

!kaggle datasets download -d hojjatk/mnist-dataset

!unzip mnist-dataset.zip

!ls

import struct
import numpy as np
from sklearn.svm import SVC
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import accuracy_score

# --- Functions to read IDX files ---
def read_images(filepath):
    with open(filepath, 'rb') as f:
        magic, num, rows, cols = struct.unpack('>IIII', f.read(16))
        return np.frombuffer(f.read(), dtype=np.uint8).reshape(num, rows * cols)

def read_labels(filepath):
    with open(filepath, 'rb') as f:
        magic, num = struct.unpack('>II', f.read(8))
        return np.frombuffer(f.read(), dtype=np.uint8)

# --- Load the MNIST dataset ---
X_train = read_images('train-images-idx3-ubyte/train-images-idx3-ubyte')
y_train = read_labels('train-labels-idx1-ubyte/train-labels-idx1-ubyte')
X_test = read_images('t10k-images-idx3-ubyte/t10k-images-idx3-ubyte')
y_test = read_labels('t10k-labels-idx1-ubyte/t10k-labels-idx1-ubyte')

print("Train Images:", X_train.shape)
print("Train Labels:", y_train.shape)
print("Test Images:", X_test.shape)
print("Test Labels:", y_test.shape)

# --- Scale pixel values using StandardScaler ---
scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train.astype(np.float32))
X_test_scaled = scaler.transform(X_test.astype(np.float32))

# --- Train SVM using RBF kernel on 20,000 samples ---
svm_model = SVC(kernel='rbf', C=5, gamma=0.005)
svm_model.fit(X_train_scaled, y_train)

# --- Predict and Evaluate ---
y_pred = svm_model.predict(X_test_scaled)
accuracy = accuracy_score(y_test, y_pred)
print(f"Test Accuracy: {accuracy*100:.2f}%")